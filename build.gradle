buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.8.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'spring-statemachine-sample'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    runtime('org.springframework.data:spring-data-rest-hal-browser')
    runtime("com.h2database:h2")
    runtime('org.springframework.boot:spring-boot-starter-logging')

    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testCompile 'org.springframework.restdocs:spring-restdocs-restassured'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile 'junit:junit:4.12'
    '2.0.2.RELEASE'.with { springStatemachineVersion ->
        compile("org.springframework.statemachine:spring-statemachine-core:$springStatemachineVersion")
        compile("org.springframework.statemachine:spring-statemachine-kryo:$springStatemachineVersion")
        testCompile("org.springframework.statemachine:spring-statemachine-test:$springStatemachineVersion")
    }
    '1.18.2'.with { lombokVersion ->
        compileOnly("org.projectlombok:lombok:$lombokVersion")
        testCompileOnly("org.projectlombok:lombok:$lombokVersion")
    }
}


test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    outputDir "docs"
    dependsOn test
}

jar {
    dependsOn asciidoctor
    from ("docs/html5") {
        into 'static/docs'
    }
}
