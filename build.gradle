buildscript {
    ext {
        springBootVersion = '1.4.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'spring-statemachine-sample'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencyManagement {
    imports {
        ext['hibernate.version'] = '5.2.4.Final'
    }
}

ext {
    snippetsDir = file('build/generated-snippets')
}
ext['spring-restdocs.version'] = '1.2.0.BUILD-SNAPSHOT'

dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    runtime('org.springframework.data:spring-data-rest-hal-browser')
    runtime("com.h2database:h2")
    runtime('org.springframework.boot:spring-boot-starter-logging')

    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:${project.ext['spring-restdocs.version']}"
    testCompile 'org.springframework.restdocs:spring-restdocs-restassured'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile 'junit:junit:4.12'
    '1.2.0.M2'.with { springStatemachineVersion ->
        compile("org.springframework.statemachine:spring-statemachine-core:$springStatemachineVersion")
        compile("org.springframework.statemachine:spring-statemachine-kryo:$springStatemachineVersion")
        testCompile("org.springframework.statemachine:spring-statemachine-test:$springStatemachineVersion")
    }
    '1.16.10'.with { lombokVersion ->
        compileOnly("org.projectlombok:lombok:$lombokVersion")
        testCompileOnly("org.projectlombok:lombok:$lombokVersion")
    }
}


test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

jar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}
